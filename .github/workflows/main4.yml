name: Release CI4

on:
  push:
    tags:
      - 'v*'  # 匹配 v1.0、v2.0 等标签
  workflow_dispatch:  # 手动触发

jobs:
  build:
    name: Build for ${{ matrix.os }}-${{ matrix.arch }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [x86_64, arm64]  # 支持 x86_64 和 ARM 架构
        exclude:
          - os: windows-latest
            arch: arm64
          - os: macos-latest
            arch: x86  # macOS 不支持 x86 架构
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.arch == 'x86' ? 'i686-pc-windows-msvc' : matrix.arch == 'x86_64' ? 'x86_64-pc-windows-msvc' : 'aarch64-apple-darwin' }}

      - name: Install dependencies (Ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev librsvg2-dev

      - name: Install dependencies (macOS only)
        if: matrix.os == 'macos-latest'
        run: |
          brew install gtk+3 webkit2gtk

      - name: Install dependencies (Windows only)
        if: matrix.os == 'windows-latest'
        run: |
          choco install gtk3

      - name: Build the project
        run: cargo build --release --target ${{ matrix.arch == 'x86' ? 'i686-pc-windows-msvc' : matrix.arch == 'x86_64' ? 'x86_64-pc-windows-msvc' : 'aarch64-apple-darwin' }}

      - name: Archive binaries
        run: |
          mkdir -p build
          cp target/${{ matrix.arch }}/release/my_app build/my_app_${{ matrix.os }}_${{ matrix.arch }}
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: my_app_${{ matrix.os }}_${{ matrix.arch }}
          path: build/my_app_${{ matrix.os }}_${{ matrix.arch }}
