name: Release

on:
    push:
        tags:
            - 'v*'  # 匹配 v1.0、v2.0 等标签
    workflow_dispatch:  # 手动触发

jobs:
    release:
        permissions:
            contents: write
        strategy:
            fail-fast: false
            matrix:
                platform: [macos-latest, ubuntu-20.04, windows-latest]
        runs-on: ${{ matrix.platform }}

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Install dependencies (ubuntu only)
              if: matrix.platform == 'ubuntu-20.04'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

            - name: Install dependencies (macOS only)
              if: matrix.platform == 'macos-latest'
              run: |
                  brew install gtk+3 webkit2gtk

            - name: Install dependencies (Windows only)
              if: matrix.platform == 'windows-latest'
              run: |
                  choco install gtk3

            - name: Rust setup
              uses: dtolnay/rust-toolchain@stable

            - name: Rust cache
              uses: swatinem/rust-cache@v2
              with:
                  workspaces: './src-tauri -> target'

            - name: Sync node version and setup cache
              uses: actions/setup-node@v4
              with:
                  node-version: 20

            - name: Install PNPM
              run: npm i -g pnpm

            - name: Install frontend dependencies
              run: pnpm install

            - name: Build the app
              uses: tauri-apps/tauri-action@v0
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tagName: ${{ github.ref_name }}
                  releaseName: 'App Name v__VERSION__'
                  releaseBody: 'See the assets to download and install this version.'
                  releaseDraft: true
                  prerelease: false

            - name: Archive binaries
              run: |
                  mkdir -p build
                  cp target/release/my_app build/my_app_${{ matrix.platform }}
              shell: bash

            - name: Upload artifacts
              uses: actions/upload-artifact@v3
              with:
                  name: my_app_${{ matrix.platform }}
                  path: build/my_app_${{ matrix.platform }}
